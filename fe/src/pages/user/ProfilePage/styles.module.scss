@use '../../../styles/variables' as *;

// CSS Reset for ProfilePage to prevent global style interference
.profileWrapper {
  * {
    box-sizing: border-box;
  }
  
  button {
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
    font: inherit;
    color: inherit;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
  }
}

.profileWrapper {
  min-height: 60vh;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--theme-bg-secondary, $color-background-secondary);
  padding: 2rem 1rem;
}

.profileCard {
  background: var(--theme-bg-primary, $color-background-primary);
  border-radius: var(--theme-border-radius-xl, $border-radius-xl);
  box-shadow: var(--theme-shadow-lg, $shadow-lg);
  padding: 2.5rem 2rem 2rem 2rem;
  max-width: 500px;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.avatarSection {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 2rem;
}

.avatar {
  width: 84px;
  height: 84px;
  border-radius: 50%;
  background: var(--theme-primary, $color-primary);
  color: var(--theme-text-white, $color-text-white);
  font-size: 2.5rem;
  font-weight: 700;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 1rem;
  box-shadow: var(--theme-shadow-md, $shadow-md);
  overflow: hidden;
}

.avatarImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 50%;
}

// Avatar Upload Styles
.avatarUpload {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 1rem;
}

.avatarContainer {
  position: relative;
  width: 84px;
  height: 84px;
  margin-bottom: 0.5rem;
}

.avatarImageWrapper {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  overflow: hidden;
  
  .avatarImage {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 50%;
  }
}

.avatarPlaceholder {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: var(--theme-primary, $color-primary);
  color: var(--theme-text-white, $color-text-white);
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: var(--theme-shadow-md, $shadow-md);
}

.avatarInitials {
  font-size: 2.5rem;
  font-weight: 700;
}

.avatarLoading {
  display: flex;
  align-items: center;
  justify-content: center;
  
  .spinner {
    width: 24px;
    height: 24px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-top: 2px solid white;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
}

.avatarUploadButton {
  position: absolute;
  bottom: -8px;
  right: -8px;
  z-index: 10;
  
  .cameraButton {
    background: var(--theme-primary, $color-primary) !important;
    border-color: var(--theme-primary, $color-primary) !important;
    box-shadow: var(--theme-shadow-md, $shadow-md);
    
    &:hover {
      background: var(--theme-primary-dark, $color-primary-dark) !important;
      border-color: var(--theme-primary-dark, $color-primary-dark) !important;
    }
  }
}



.avatarUploadWrapper {
  margin-bottom: 1rem;
}

.fullName {
  font-size: $font-size-2xl;
  font-weight: $font-weight-semibold;
  color: var(--theme-text-primary, $color-text-primary);
  margin-bottom: 0.25rem;
}

.role {
  font-size: $font-size-base;
  color: var(--theme-primary, $color-primary);
  font-weight: $font-weight-medium;
  margin-bottom: 0.5rem;
}

.infoSection {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 1.1rem;
}

.infoItem {
  display: flex;
  align-items: center;
  gap: 0.7rem;
  background: var(--theme-bg-light, $color-background-light);
  border-radius: var(--theme-border-radius-md, $border-radius-md);
  padding: 0.7rem 1rem;
}

.icon {
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--theme-primary, $color-primary);
}

.label {
  font-size: $font-size-base;
  color: var(--theme-text-secondary, $color-text-secondary);
  min-width: 110px;
  font-weight: $font-weight-medium;
}

.value {
  font-size: $font-size-base;
  color: var(--theme-text-primary, $color-text-primary);
  font-weight: $font-weight-medium;
  word-break: break-all;
}

.editInput {
  font-size: $font-size-base;
  color: var(--theme-text-primary, $color-text-primary);
  font-weight: $font-weight-medium;
  background: transparent;
  border: none;
  outline: none;
  flex: 1;
  min-width: 150px;
  padding: 0.5rem 0.75rem;
  border-bottom: 2px solid var(--theme-primary, $color-primary);
  border-radius: var(--theme-border-radius-sm, $border-radius-sm);
  
  &:focus {
    border-bottom-color: var(--theme-primary-dark, $color-primary-dark);
    background: rgba(var(--theme-primary-rgb, 0, 102, 177), 0.05);
  }
  
  &::placeholder {
    color: var(--theme-text-muted, $color-text-muted);
  }
}

.actionButtons {
  display: flex;
  gap: 1rem;
  margin-top: 2rem;
  width: 100%;
  justify-content: center;
}

.editButton, .saveButton, .cancelButton {
  padding: 0.75rem 1.5rem;
  border-radius: var(--theme-border-radius-md, $border-radius-md);
  font-size: $font-size-base;
  font-weight: $font-weight-medium;
  border: none;
  cursor: pointer;
  transition: var(--theme-transition-normal, $transition-normal);
  
  &:hover:not(:disabled) {
    transform: translateY(-1px);
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }
}

.editButton {
  background: var(--theme-primary, $color-primary) !important;
  color: var(--theme-text-white, $color-text-white) !important;
  
  &:hover:not(:disabled) {
    background: var(--theme-primary-dark, $color-primary-dark) !important;
  }
}

.saveButton {
  background: var(--theme-success, $color-success) !important;
  color: var(--theme-text-white, $color-text-white) !important;
  
  &:hover:not(:disabled) {
    background: var(--theme-success-dark, $color-success) !important;
  }
}

.cancelButton {
  background: var(--theme-text-muted, $color-text-muted) !important;
  color: var(--theme-text-white, $color-text-white) !important;
  
  &:hover:not(:disabled) {
    background: var(--theme-text-secondary, $color-text-secondary) !important;
  }
}

.loadingWrapper {
  min-height: 60vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

.spinner {
  width: 48px;
  height: 48px;
  border: 5px solid var(--theme-border-light, $color-border-light);
  border-top: 5px solid var(--theme-primary, $color-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.notLoggedIn {
  min-height: 60vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  color: var(--theme-text-secondary, $color-text-secondary);
  background: var(--theme-bg-primary, $color-background-primary);
  border-radius: var(--theme-border-radius-lg, $border-radius-lg);
  box-shadow: var(--theme-shadow-md, $shadow-md);
  padding: 2.5rem 2rem;
  max-width: 400px;
  margin: 2rem auto;
}

@media (max-width: 600px) {
  .profileCard {
    padding: 1.2rem 0.5rem;
  }
  .infoSection {
    gap: 0.7rem;
  }
  .notLoggedIn {
    padding: 1.2rem 0.5rem;
  }
  .actionButtons {
    flex-direction: column;
    gap: 0.5rem;
  }
}

// Theme-aware button styles with maximum specificity
html body .profileWrapper .profileCard .actionButtons .editButton,
html body .profileWrapper .profileCard .actionButtons .saveButton,
html body .profileWrapper .profileCard .actionButtons .cancelButton {
  background: var(--theme-primary, $color-primary) !important;
  color: var(--theme-text-white, $color-text-white) !important;
  border: none !important;
  outline: none !important;
  box-shadow: none !important;
  
  &:hover:not(:disabled) {
    transform: translateY(-1px) !important;
  }
  
  &:disabled {
    opacity: 0.6 !important;
    cursor: not-allowed !important;
    transform: none !important;
  }
}

html body .profileWrapper .profileCard .actionButtons .cancelButton {
  background: var(--theme-text-muted, $color-text-muted) !important;
  color: var(--theme-text-white, $color-text-white) !important;
  
  &:hover:not(:disabled) {
    background: var(--theme-text-light, $color-text-secondary) !important;
  }
}

// Maximum specificity override for all global button styles
html body .profileWrapper .profileCard .actionButtons button,
html body .profileWrapper .profileCard .actionButtons .editButton,
html body .profileWrapper .profileCard .actionButtons .saveButton,
html body .profileWrapper .profileCard .actionButtons .cancelButton {
  background: var(--theme-primary, $color-primary) !important;
  color: var(--theme-text-white, $color-text-white) !important;
  border: none !important;
  outline: none !important;
  box-shadow: none !important;
  padding: 0.75rem 1.5rem !important;
  border-radius: var(--theme-border-radius-md, $border-radius-md) !important;
  font-size: $font-size-base !important;
  font-weight: $font-weight-medium !important;
  cursor: pointer !important;
  transition: var(--theme-transition-normal, $transition-normal) !important;
  
  &:hover:not(:disabled) {
    transform: translateY(-1px) !important;
  }
  
  &:disabled {
    opacity: 0.6 !important;
    cursor: not-allowed !important;
    transform: none !important;
  }
}

html body .profileWrapper .profileCard .actionButtons .cancelButton {
  background: var(--theme-text-muted, $color-text-muted) !important;
  color: var(--theme-text-white, $color-text-white) !important;
  
  &:hover:not(:disabled) {
    background: var(--theme-text-light, $color-text-secondary) !important;
  }
} 
// Password Change Modal Styles
.passwordChangeButton {

  &:hover:not(:disabled) {
  }

  &:disabled {
  }
}

// Antd Modal Customization
:global(.ant-modal) {
  &.passwordModal {
    .ant-modal-header {
      border-bottom: 1px solid var(--theme-border-light, #e5e5e5);
      padding: 24px 24px 16px;
    }

    .ant-modal-body {
      padding: 24px;
    }

    .ant-modal-title {
      font-size: 18px;
      font-weight: 600;
      color: var(--theme-text-primary, #1a1a1a);
    }
  }
}

.modalTitle {
  display: flex;
  align-items: center;
  gap: 8px;
}

.passwordForm {
  .modalInput {
    &:focus {
      border-color: var(--theme-primary, #059669);
      box-shadow: 0 0 0 2px rgba(5, 150, 105, 0.2);
    }
  }

  :global(.ant-form-item-extra) {
    font-size: 12px;
    color: var(--theme-text-muted, #666);
    margin-top: 4px;
  }
}

.modalActions {
  display: flex;
  gap: 12px;
  margin-top: 24px;
  justify-content: flex-end;

  .submitButton {
    background: var(--theme-primary, #059669);
    border-color: var(--theme-primary, #059669);

    &:hover {
      background: var(--theme-primary-dark, #047857);
      border-color: var(--theme-primary-dark, #047857);
    }
  }

  .cancelButton {
    background: var(--theme-bg-secondary, #f5f5f5);
    color: var(--theme-text-secondary, #666);
    border-color: var(--theme-border-light, #e5e5e5);

    &:hover {
      background: var(--theme-bg-hover, #e5e5e5);
      border-color: var(--theme-border-light, #e5e5e5);
      color: var(--theme-text-secondary, #666);
    }
  }
}

// Responsive
@media (max-width: 768px) {
  .passwordChangeButton {
  }

  .modalActions {
    flex-direction: column-reverse;
    gap: 8px;

    .submitButton,
    .cancelButton {
      width: 100%;
    }
  }

  :global(.ant-modal) {
    &.passwordModal {
      .ant-modal-header {
        padding: 20px 20px 12px;
      }

      .ant-modal-body {
        padding: 20px;
      }

      .ant-modal-title {
        font-size: 16px;
      }
    }
  }
}
